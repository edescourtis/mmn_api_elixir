# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule MmnApi.Api.Report do
  @moduledoc """
  API calls for all endpoints tagged `Report`.
  """

  alias MmnApi.Connection
  import MmnApi.RequestBuilder


  @doc """
  Perform some action on a report instance
  Only supports CANCEL

  ## Parameters

  - connection (MmnApi.Connection): Connection to server
  - rid (Integer): report identifier
  - action (String): action to perform
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %MmnApi.Model.Report{}} on success
  {:error, info} on failure
  """
  @spec broadcast_action(Tesla.Env.client, Integer.t, String.t, keyword()) :: {:ok, MmnApi.Model.Report.t} | {:error, Tesla.Env.t}
  def broadcast_action(connection, rid, action, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/reports/#{rid}")
    |> add_param(:query, :"action", action)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%MmnApi.Model.Report{})
  end

  @doc """
  Get a report using the report identifier
  

  ## Parameters

  - connection (MmnApi.Connection): Connection to server
  - rid (Integer): 
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %MmnApi.Model.Report{}} on success
  {:error, info} on failure
  """
  @spec get_report(Tesla.Env.client, Integer.t, keyword()) :: {:ok, MmnApi.Model.Report.t} | {:error, Tesla.Env.t}
  def get_report(connection, rid, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/reports/#{rid}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%MmnApi.Model.Report{})
  end

  @doc """
  [INTERNAL] Get report events using the report identifier
  Returns a list of events. This is a deprecated call, to be replaced by a more general solution.

  ## Parameters

  - connection (MmnApi.Connection): Connection to server
  - rid (Integer): 
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%ReportRecipientStatus{}, ...]} on success
  {:error, info} on failure
  """
  @spec get_report_detail(Tesla.Env.client, Integer.t, keyword()) :: {:ok, list(MmnApi.Model.ReportRecipientStatus.t)} | {:error, Tesla.Env.t}
  def get_report_detail(connection, rid, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/reports/#{rid}/recipients")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%MmnApi.Model.ReportRecipientStatus{}])
  end

  @doc """
  Get a list of reports
  Returns a list of reports

  ## Parameters

  - connection (MmnApi.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%Report{}, ...]} on success
  {:error, info} on failure
  """
  @spec get_report_set(Tesla.Env.client, keyword()) :: {:ok, list(MmnApi.Model.Report.t)} | {:error, Tesla.Env.t}
  def get_report_set(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/reports")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%MmnApi.Model.Report{}])
  end

  @doc """
  Register for report events with a callback URL
  

  ## Parameters

  - connection (MmnApi.Connection): Connection to server
  - body (ReportEventListenerRegistrationRequest): Report event listener object
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec register_broadcast_event_listener(Tesla.Env.client, MmnApi.Model.ReportEventListenerRegistrationRequest.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def register_broadcast_event_listener(connection, body, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/reports/updates/registration")
    |> add_param(:body, :"body", body)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end
end
